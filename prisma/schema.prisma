generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  // relationMode = "prisma" // This line is removed because MongoDB does not support relational data modeling like SQL databases
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  userId    String   @db.ObjectId
  // Change Int to String for compatibility with User id type

  // MongoDB does not have foreign key constraints like SQL databases, so the @relation directive is removed
  // user      User     @relation(fields: [userId], references: [id])

  // No updoods relation, as MongoDB does not support joins or relational queries
  User User @relation(fields: [userId], references: [id])
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  email     String   @unique
  password  String
  posts     Post[]
  updoods   Updoot[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Updoot {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  postId String @db.ObjectId
  value  Int

  // No user or post relation, as MongoDB does not support joins or relational queries
  User User @relation(fields: [userId], references: [id])
}
